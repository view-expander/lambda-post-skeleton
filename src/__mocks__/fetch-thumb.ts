import MockAdapter from 'axios-mock-adapter'
import api from '../api'
export const DUMMY_IMAGE = new Uint8Array(
  Buffer.from(
    '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',
    'base64'
  ).buffer
).buffer

export default jest.fn().mockImplementation(async (key: string) => {
  const mock = new MockAdapter(api)
  mock
    .onGet(`source/${key}`)
    .reply(200, DUMMY_IMAGE, { 'content-type': 'image/jpeg' })

  const res = await api.get(`/source/${key}`, {
    params: {
      size: 'thumb',
    },
    responseType: 'arraybuffer',
  })

  mock.restore()

  return Promise.resolve(res)
})
